import java.awt.Dimension;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
 



import java.io.IOException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import com.esotericsoftware.kryonet.Client;
import com.esotericsoftware.kryonet.Connection;
import com.esotericsoftware.kryonet.Listener;

import packets.Packet;
import packets.Packet1Connect;
import packets.Packet2ClientConnected;
import packets.Packet3ClientDisconnect;
import packets.Packet4Chat;
 
 
public class Main implements ActionListener {
 
        private final JFrame frame = new JFrame("Chat Client");
        private final JTextArea textArea = new JTextArea();
        private final JTextField textField = new JTextField(25);
        private final JButton sendButton = new JButton("Send");
        private final Client client;
        private String username;
       
        public Main() {
        	    client = new Client();
        	    client.start();
        	    
        	    try{
            	    client.connect(5000, "127.0.0.1", 23900, 23901);
                    } catch (IOException e) {
                    	JOptionPane.showMessageDialog(null, "Can not connect to Server.");
                    	return;
                    	
                    }
        	    

        	    client.getKryo().register(Packet.class);
        	    client.getKryo().register(Packet1Connect.class);
        	    client.getKryo().register(Packet2ClientConnected.class);
        	    client.getKryo().register(Packet3ClientDisconnect.class);
        	    client.getKryo().register(Packet4Chat.class);

        	    
        		  client.addListener(new Listener(){
        	    	 public void received(Connection connection, Object object){
        	    		 if(object instanceof Packet){
        	    			 if(object instanceof Packet2ClientConnected){
        	    				 Packet2ClientConnected p2 = (Packet2ClientConnected) object;
        	    				 System.out.println("connected");
        	    				 textArea.append(p2.clientName + " connected.\n");
        	    			 }else if(object instanceof Packet3ClientDisconnect){
        	    				 Packet3ClientDisconnect p3 = (Packet3ClientDisconnect) object;
        	    			     textArea.append(p3.clientName +"disconnected.\n");
        	    			 }else if(object instanceof Packet4Chat){
        	    				 Packet4Chat p4 = (Packet4Chat) object;
        	    				 textArea.append(p4.username+ ":" + p4.message + "\n");
        	    			 }
        	    			 
        	    	 }
        		  }
        	    });
        	     username = JOptionPane.showInputDialog("pleae enter your username");
                
        	    Packet1Connect p1 = new Packet1Connect();
        	    p1.username = username;
        	    client.sendTCP(p1);
                frame.setSize(450, 375);
                frame.setLocationRelativeTo(null);
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
               
                Panel p = new Panel();
               
                sendButton.addActionListener(this);
                textArea.setEditable(false);
                textArea.setEditable(true);
                textArea.setWrapStyleWord(true);
                JScrollPane areaScrollPane = new JScrollPane(textArea);
                areaScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
                areaScrollPane.setPreferredSize(new Dimension(430, 275));
               
                p.add(areaScrollPane);
                p.add(textField);
                p.add(sendButton);
               
                frame.add(p);
                frame.setVisible(true);
        }
       
        public static void main(String[] args) {
                new Main();
        }
 
        @Override
        public void actionPerformed(ActionEvent arg0) {
                String message = textField.getText();
                if(!message.equalsIgnoreCase("")){
                textField.setText("");
                Packet4Chat p4 = new Packet4Chat();
                p4.username = username;
                p4.message = message;
                client.sendTCP(p4);
                textField.setText("");
        }
        }
}